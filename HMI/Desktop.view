<div id="Desktop" data-tchmi-type="tchmi-view"
     data-tchmi-top="0" data-tchmi-left="0"
     data-tchmi-width-mode="Content"
     data-tchmi-min-width="100" data-tchmi-min-width-unit="%"
     data-tchmi-height-mode="Content"
     data-tchmi-min-height="100" data-tchmi-min-height-unit="%"
     data-tchmi-background-image="Images/Background.png"
     data-tchmi-background-image-height="100" data-tchmi-background-image-width="100"
     data-tchmi-background-image-height-unit="%" data-tchmi-background-image-width-unit="%">

  <div id="ViewDesktopBeckhoffLogo" data-tchmi-type="tchmi-image" 
       data-tchmi-src="Images/Beckhoff_Logo.svg"
       data-tchmi-left="20" data-tchmi-top="20" 
       data-tchmi-width="194" data-tchmi-height="57">

  

</div>




<div id="TcHmiButton_A" data-tchmi-type="tchmi-button" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-text="a" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="59" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-font-size="20">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_A.onAttached",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "AssignKeyToButton",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiButton_A%/ctrl%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/String",
            "value": "a"
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_A.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiTextblock::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "(a) has been pressed"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiButton_B" data-tchmi-type="tchmi-button" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="89" data-tchmi-left-unit="px" data-tchmi-text="b" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="59" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-font-size="20">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_B.onAttached",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "AssignKeyToButton",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiButton_B%/ctrl%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/String",
            "value": "b"
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_B.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiTextblock::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "(b) has been pressed"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiButton_C" data-tchmi-type="tchmi-button" data-tchmi-height="50" data-tchmi-height-unit="px" data-tchmi-left="158" data-tchmi-left-unit="px" data-tchmi-text="c" data-tchmi-top="87" data-tchmi-top-unit="px" data-tchmi-width="59" data-tchmi-width-unit="px" data-tchmi-word-wrap="True" data-tchmi-text-font-size="20">


<script data-tchmi-target-attribute="data-tchmi-trigger" type="application/json">
[
  {
    "event": "TcHmiButton_C.onAttached",
    "actions": [
      {
        "objectType": "Function",
        "active": true,
        "fn": "AssignKeyToButton",
        "fnParams": [
          {
            "objectType": "Symbol",
            "symbolExpression": "%ctrl%TcHmiButton_C%/ctrl%"
          },
          {
            "objectType": "StaticValue",
            "valueType": "tchmi:general#/definitions/String",
            "value": "c"
          }
        ],
        "asyncWait": true
      }
    ]
  },
  {
    "event": "TcHmiButton_C.onPressed",
    "actions": [
      {
        "objectType": "WriteToSymbol",
        "active": true,
        "symbolExpression": "%ctrl%TcHmiTextblock::Text%/ctrl%",
        "valueType": "tchmi:general#/definitions/String",
        "value": {
          "objectType": "StaticValue",
          "valueType": "tchmi:general#/definitions/String",
          "value": "(c) has been pressed"
        },
        "asyncWait": true
      }
    ]
  }
]
</script>
</div>

<div id="TcHmiTextblock" data-tchmi-type="tchmi-textblock" data-tchmi-height="26" data-tchmi-height-unit="px" data-tchmi-left="20" data-tchmi-left-unit="px" data-tchmi-text="Press button or key" data-tchmi-top="147" data-tchmi-top-unit="px" data-tchmi-width="150" data-tchmi-width-unit="px" data-tchmi-word-wrap="True">

</div>

</div>